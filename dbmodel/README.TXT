[DB 모델링]
- 데이터의 중복을 제거하여 동기화를 유지할 수 있도록 설계
- 데이터 중복? 
  - 같은 데이터가 여러 곳에 분산되어 있을 때 동기화 문제가 발생한다.
  - 데이터 결함을 유발할 수 있다.
  - 업무에 치명적인 영향을 끼친다.
- 데이터 중복 제거 방법? 
  - 정규화를 수행
  - 제1정규화, 제2정규화, 제3정규화 진행

[논리 모델링]  
1. 엔티티(entity=테이블) 생성
  - 시스템에서 다룰 데이터 항목을 정의한다.

2. 주키(Primary Key; PK) 지정
  - 엔티티의 데이터 식별할 때 사용할 조건 검사 컬럼들
  - 한 개 이상의 컬럼으로 구성할 수 있다.
  - PK 컬럼의 값이 길면 색인표도 함께 길어지기 때문에 가능한 짦은 값을 가지는 컬럼을 PK로 지정한다.
  - 만약 PK로 적당한 컬럼을 찾을 수 없다면, 임의의 컬럼을 만들어 PK로 사용하라!
    예) 일련번호 컬럼

3. 제1정규화
  - 반복되는 중복 컬럼이 있으면 외부 테이블로 분리한다. 그리고 부모-자식 관계를 맺는다.
  - 반복되는 데이터가 있다면 외부 테이블로 분리한다. 그리고 부모-자식 관계를 맺는다.
   
4. 제2정규화
  - PK를 구성하는 컬럼 개수가 2개 이상일 때 정규화를 수행한다.
  - 일반 컬럼은 PK 컬럼 모두에 종속되어야 한다.
  - 만약 PK 컬럼 중 한 개에만 종속된다면 그 일반 컬럼을 외부 테이블로 분리하여 부모-자식 관계를 맺는다.
  
5. 제3정규화
  - 어떤 일반 컬럼이 다른 일반 컬럼에 종속될 경우,
    그 일반 컬럼을 외부 테이블로 분리하여 부모-자식 관계를 맺는다.

6. 다 대 다 관계 해소 
  - DBMS는 다대다 관계의 데이터를 다룰 수 없다.
  - 관계를 표현하는 테이블을 만들고 각각의 테이블에 대해 부모-자식 관계를 맺는다. 

7. 관계 개수 지정하기
  - 관계의 개수를 지정한다.
  - 일 대 다, 0 또는 1 대 다, 일 대 일 이상, ... 등

[물리 모델링]
실제 DBMS의 조건에 맞추어 설계하는 것.
8. 물리 테이블명 및 컬럼명 지정
  - 논리명으로 되어 있는 테이블명 및 컬럼명을 DBMS 조건에 맞추어 변경한다.
  - 보통 짧은 단어로 이름을 짓는다.
  - 여러 단어로 이루어진 경우, 각 단어는 2~4자 정도의 약어로 기술하고 단어 사이는 밑줄(_)로 연결한다.
    예) FRST_NM, LST_NM, REG_DT, CLS_ROOM_NM 등

9. 도메인 정의 및 적용
  - 도메인? 유사한 데이터 별로 컬럼들을 그룹 짓는 것.
                그 그룹에 타입을 부여한다.
  - 각 컬럼에 도메인을 지정한다.
  - 이유? 타입을 변경할 때 여러 컬럼을 한 번에 변경할 수 있다.

10. NULL 허용 여부 지정
  - 컬럼 값의 필수 입력 여부를 지정한다.       

11. 인덱스 컬럼 지정
  - 검색할 때 조건으로 지정할 컬럼 지정
  - 인덱스 컬럼을 지정하면 테이블의 데이터가 바뀔 때 마다 색인 테이블을 자동으로 갱신한다.
     where 절 조건으로 사용할 때 속도가 빠르다.
  - 단점, 테이블의 데이터를 자주 변경하는 경우라면 입력/변경/삭제할 때 마다 
    색인 테이블 또한 갱싱되기 때문에 입력/변경/삭제 속도가 느려진다. 

12. 유니크 컬럼 지정
  - PK 컬럼은 아니지만 중복되어서는 안되는 컬럼을 지정한다.

13. 기본 값 및 제약 조건 설정
  - 컬럼의 기본 값이 필요한 경우 지정한다.
  - 컬럼에 입력할 수 있는 값의 조건이 있을 경우 지정한다.
  
14. 포워드 엔지니어링(forward engineering)
  - 모델링(다이어그램) ==> SQL 코드 생성 
  - 참고: 리버스 엔지니어링(reverse engineering) 
    DBMS의 SQL ==> 모델링(다이어그램)
    
    
[관계 표기]
ㅋ------K   (다 대 다)
-|-------K   (일 대 다)
-|0------K  (0 또는 1 대 다)
-|------0K  (1 대 0이상)
-|0------K  (0 또는 1 대 0이상)

[부모-자식 관계]
- 보통 부모 쪽이 '일'이고 자식 쪽이 '다'이다.
- 자식 테이블에서 부모 테이블의 데이터를 참조하는 것이기 때문에
  자식 테이블 쪽에 부모 테이블의 주 키 값을 담을 컬럼이 존재한다.
  이 때 부모 테이블의 PK 값을 저장하는 자식 테이블 쪽의 컬럼을 '외부 키(Foreign Key; FK)'라 부른다.
    
[식별/비식별 관계]
1) 식별관계(identifying)
  - FK 컬럼이 PK로도 사용된다.
  - 즉 관계를 나타내는 FK가 식별자로도 사용된다는 것을 의미한다.
2) 비식별관계(non-identifying)
  - FK 컬럼이 그냥 일반 컬럼이다.



 
   